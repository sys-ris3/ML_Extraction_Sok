cc_library(
    name = "libdarknet",
    srcs = [
        "src/gemm.c",
		"src/utils.c",
		"src/cuda.c",
		"src/deconvolutional_layer.c",
		"src/convolutional_layer.c",
		"src/list.c",
		"src/image.c",
		"src/activations.c",
		"src/im2col.c",
		"src/col2im.c",
		"src/blas.c",
		"src/crop_layer.c",
		"src/dropout_layer.c",
		"src/maxpool_layer.c",
		"src/softmax_layer.c",
		"src/data.c",
		"src/matrix.c",
		"src/network.c",
		"src/connected_layer.c",
		"src/cost_layer.c",
		"src/parser.c",
		"src/option_list.c",
		"src/detection_layer.c",
		"src/route_layer.c",
		"src/upsample_layer.c",
		"src/box.c",
		"src/normalization_layer.c",
		"src/avgpool_layer.c",
		"src/layer.c",
		"src/local_layer.c",
		"src/shortcut_layer.c",
		"src/logistic_layer.c",
		"src/activation_layer.c",
		"src/rnn_layer.c",
		"src/gru_layer.c",
		"src/crnn_layer.c",
		"src/demo.c",
		"src/batchnorm_layer.c",
		"src/region_layer.c",
		"src/reorg_layer.c",
		"src/tree.c",
		"src/lstm_layer.c",
		"src/l2norm_layer.c",
		"src/yolo_layer.c",
		"src/iseg_layer.c",
		"src/add_mask_layer.c",
		"src/linear_transform_layer.c",
		"src/shuffle_channel_layer.c",
    ],
    hdrs = [
        "include/darknet.h",
        "src/gemm.h",
		"src/utils.h",
		"src/cuda.h",
		"src/deconvolutional_layer.h",
		"src/convolutional_layer.h",
		"src/list.h",
		"src/image.h",
		"src/activations.h",
		"src/im2col.h",
		"src/col2im.h",
		"src/blas.h",
		"src/crop_layer.h",
		"src/dropout_layer.h",
		"src/maxpool_layer.h",
		"src/softmax_layer.h",
		"src/data.h",
		"src/matrix.h",
		"src/network.h",
		"src/connected_layer.h",
		"src/cost_layer.h",
		"src/parser.h",
		"src/option_list.h",
		"src/detection_layer.h",
		"src/route_layer.h",
		"src/upsample_layer.h",
		"src/box.h",
		"src/normalization_layer.h",
		"src/avgpool_layer.h",
		"src/layer.h",
		"src/local_layer.h",
		"src/shortcut_layer.h",
		"src/logistic_layer.h",
		"src/activation_layer.h",
		"src/rnn_layer.h",
		"src/gru_layer.h",
		"src/crnn_layer.h",
		"src/demo.h",
		"src/batchnorm_layer.h",
		"src/region_layer.h",
		"src/reorg_layer.h",
		"src/tree.h",
		"src/lstm_layer.h",
		"src/l2norm_layer.h",
		"src/yolo_layer.h",
		"src/iseg_layer.h",
		"src/stb_image.h",
		"src/stb_image_write.h",
		"src/add_mask_layer.h",
		"src/linear_transform_layer.h",
		"src/shuffle_channel_layer.h",
    ],
    copts = [
        "-DDEBUG",
        "-fPIC",
        "-c",
        "-Wall",
        "-Wno-unused-result",
        "-Wno-unknown-pragmas",
        "-Wfatal-errors",
    ],
    includes = [
        "include",
        "src",
    ],
    linkopts = select({
#        "@org_tensorflow//tensorflow:android": [
#            "-lm",
#        ],
        "//conditions:default": [
            "-lpthread",
            "-lm",
        ],
    }),
    visibility = ["//visibility:public"],
)
